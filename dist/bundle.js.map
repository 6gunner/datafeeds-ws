{"version":3,"file":"bundle.js","sources":["../src/helpers.js","../src/ws.js","../src/requester.js","../src/ws-compatible-datafeed-base.js","../src/index.js"],"sourcesContent":["/**\n * If you want to enable logs from datafeed set it to `true`\n */\nvar isLoggingEnabled = true;\n\nexport function logMessage(message) {\n  if (isLoggingEnabled) {\n    var now = new Date();\n    console.log(now.toLocaleTimeString() + \" > \" + message);\n  }\n}\n\nexport function getErrorMessage(error) {\n  if (error === undefined) {\n    return '';\n  }\n  else if (typeof error === 'string') {\n    return error;\n  }\n  return error.message;\n}\n","import { getErrorMessage, logMessage } from './helpers';\nexport class WS {\n  constructor (url, opts = {}) {\n    this.connectState = false\n    this.listeners = {}\n    this.connectionUrl = url\n    this.opts = opts\n    this.reconnection = this.opts.reconnection || false\n    this.reconnectionAttempts = this.opts.reconnectionAttempts || 5\n    this.reconnectionDelay = this.opts.reconnectionDelay || 1000\n    this.reconnectTimeoutId = 0\n    this.reconnectionCount = 0\n    this.connect(url, opts)\n  }\n  connect (connectionUrl, opts = {}) {\n    this.webSocket = new WebSocket(connectionUrl)\n    this.webSocket.binaryType = 'arraybuffer'\n    if (!('sendObj' in this.webSocket)) {\n      this.webSocket.sendObj = (obj) => this.webSocket.send(JSON.stringify(obj))\n    }\n    this.initEvent()\n    return this.webSocket\n  }\n\n  reconnect() {\n    if (this.reconnectionCount <= this.reconnectionAttempts) {\n      this.reconnectionCount++\n      clearTimeout(this.reconnectTimeoutId)\n      this.reconnectTimeoutId = setTimeout(() => {\n        this.connect(this.connectionUrl, this.opts)\n        this.initEvent()\n      }, this.reconnectionDelay)\n    }\n  }\n\n  initEvent() {\n    ['onmessage', 'onopen', 'onclose', 'onerror'].forEach((eventType, index) => {\n      this.listeners[eventType] = this.listeners[eventType] || []\n      this.webSocket[eventType] = (event) => {\n        if (eventType === 'onopen') {\n          this.connectState = true\n        }\n        if (this.reconnection && eventType === 'onopen') {\n          this.reconnectionCount = 0\n        }\n        if (this.reconnection && eventType === 'onclose') {\n          this.reconnect(event)\n        }\n        this.listeners[eventType].forEach((handler) => {\n          handler(event)\n        })\n      }\n    })\n  }\n\n  on (eventType, handler) {\n    if (!['message', 'open', 'close', 'error'].includes(eventType)) {\n      throw new Error('event type error')\n    }\n    let listeners = this.listeners['on'+eventType] || []\n    listeners.push(handler)\n\n    this.listeners['on'+eventType] = listeners\n  }\n\n  send (data) {\n    // if (data.type === 0) {\n    //   logMessage(`ws订阅消息：api: ${data.api}, topic: ${data.topic}`)\n    // } else if (data.type === 1) {\n    //   logMessage(`ws取消订阅消息：api: ${data.api}, topic: ${data.topic}`)\n    // } else {\n    //   logMessage(`ws发送消息： ${JSON.stringify(data)}`)\n    // }\n    this.webSocket.sendObj(data);\n  }\n\n  close() {\n    this.reconnectionCount = 0\n    this.reconnectionAttempts = -1\n    this.webSocket.close()\n  }\n\n}\n","import _ from 'underscore';\nimport { getErrorMessage, logMessage } from './helpers';\nimport { WS } from './ws';\n\nexport class Requester {\n  constructor(url) {\n    const ws = new WS(url, {\n      reconnection: true,\n    });\n    ws.on('open', () => {\n      logMessage('k线行情连接成功');\n      _.each(this._callbacks, (callback) => {\n        this.ws.send(callback.req);\n      });\n    });\n    ws.on('message', (event) => {\n      const { data } = event;\n      if (!data) {\n        return;\n      }\n      const dataJson = JSON.parse(data);\n      // getServerTime || getSymbol || getKline\n      if (dataJson.id > 0 && this._callbacks[dataJson.api]) {\n        const { callback } = this._callbacks[dataJson.api];\n        callback(event, dataJson);\n      } else {\n        // 订阅的币对数据\n        const func = this._callbacks[`${dataJson.api}#${dataJson.topic}`];\n        if (func) {\n          func.callback(dataJson);\n        }\n      }\n    });\n    ws.on('close', () => {\n      logMessage('k线行情断开成功');\n    });\n    this.ws = ws;\n    this._callbacks = {};\n    this._requests = [];\n  }\n\n  subscribe(api, topic, onSubscriberDataReceived) {\n    logMessage(`订阅新的主题：api: ${api}, topic: ${topic}`)\n    const req = {\n      id: _.uniqueId(),\n      api,\n      topic,\n      type: 0,\n    }\n    this.ws.send(req)\n    this._callbacks[api+'#'+topic] = {req, callback: onSubscriberDataReceived}\n  }\n\n  unsubscribe (api, topic) {\n    logMessage(`取消订阅主题：api: ${api}, topic: ${topic}`)\n    let req = {\n      id: _.uniqueId(),\n      api: api,\n      topic: topic,\n      type: 1\n    }\n    this.ws.send(req)\n    this._callbacks[api+'#'+topic] = null;\n    delete this._callbacks[api+'#'+topic]\n  }\n\n  sendRequest (api, params = '') {\n    logMessage(`发送请求: ${api}, 参数: ${params}`)\n    let id = _.uniqueId()\n    let req = {\n      id: id,\n      api: api,\n      topic: params,\n      type: 2\n    }\n    return new Promise((resolve, reject) => {\n      if (this.ws.connectState) {\n        this.ws.send(req)\n      }\n      let callback = function (event, resp) {\n        if (resp.error_code !== '0') {\n          reject(resp)\n          return\n        }\n        resolve(resp)\n      }\n      // 缓存所有请求连接上再发送\n      this._callbacks[api] = {\n        req: req,\n        callback: callback\n      }\n    })\n  }\n  close() {\n    this.ws.close()\n  }\n}\n","import _ from 'underscore';\nimport { getErrorMessage, logMessage } from './helpers';\nimport { Requester } from './requester';\n\nfunction parseDate(date) {\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n}\nfunction defaultConfiguration() {\n  return {\n    supports_search: false,\n    supports_group_request: false,\n    exchanges: '', // []表示不过滤交易市场, ''表示包括所有交易市场\n    symbols_types: '', // []表示不过滤币对，''表示包括所有交易币对\n    supported_resolutions: ['1', '5', '15', '30', '60', 'D'],\n    supports_marks: false,\n    supports_timescale_marks: false, // 是否支持时间缩放\n    supports_time: true,\n  };\n}\nfunction getPeriodByInterval(interval) {\n  try {\n    const matched = interval.toString().match(/^(\\d+)?([SDWM]?)?$/);\n    const num = matched[1] || 1; // 数量\n    const resolution = matched[2]; // 单位\n    switch (resolution) {\n      case 'S':\n        return num * 60;\n      case 'D':\n      case 'W':\n      case 'M':\n        return 86400;\n      default:\n        return num * 60;\n    }\n  } catch (e) {\n    throw interval;\n  }\n}\n\nfunction getIntervalByPeriod(period) {\n  try {\n    let matched = period.match(/^(\\d+)(s|min|hour|day|mon|week|year)$/)\n    let input = matched[0]\n    let r = matched[1] || 1\n    let type = matched[2]\n    switch (type) {\n      case 's':\n        return r + 'S';\n      case 'hour':\n        return '' + 60 * r;\n      case 'day':\n        return r + 'D';\n      case 'week':\n        return 7 * parseInt(r, 10) + 'D';\n      case 'mon':\n        return r + 'M';\n      case 'year':\n        return 12 * parseInt(r, 10) + 'M';\n      default:\n        return r\n    }\n  } catch(e) {\n    throw t\n  }\n}\n\nexport class WSCompatibleDatafeedBase {\n  constructor (datafeedUrl) {\n    this._subscribers = {}; // 订阅的回调\n    this._resetCacheNeededCallbacks = {};\n    this._datafeedUrl = datafeedUrl;\n    this._configuration = defaultConfiguration();\n    this._requester = new Requester(datafeedUrl);\n  }\n\n  _send (urlPath, params) {\n    return this._requester.sendRequest(urlPath, params)\n  }\n\n  onReady (callback) {\n    setTimeout(() => {\n      callback(this._configuration)\n    }, 0)\n  }\n\n  searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n    // 暂不实现\n  }\n\n  /**\n   * @param symbolJsonStr symbol的json字符串\n   * @param onSymbolResolvedCallback\n   * @param onResolveErrorCallback\n   */\n  resolveSymbol(symbolStr, onSymbolResolvedCallback, onResolveErrorCallback) {\n    logMessage(`获取币对信息${symbolStr}`);\n    let exch_abb = symbolStr.split(':')[0];\n    let symbol_name = symbolStr.split(':')[1];\n    this._send('getSymbol', exch_abb + '.' + symbol_name.replace('/', '').toLowerCase())\n      .then(data => {\n        logMessage(`解析到币对信息${data.content}`);\n        const symbolData = JSON.parse(data.content);\n        if (!symbolData) {\n          throw new Error('no such symbol');\n        }\n        const symbolInfo = {\n          name: symbol_name.toUpperCase(),\n          ticker: data.topic, // {exch}.{symbol} 唯一标示\n          type: 'bitcoin',\n          session: '24x7',\n          timezone: 'Asia/Shanghai',\n          exchange: exch_abb,\n          minmov: 1,\n          pricescale: Number(`1e${symbolData.price_preci}`),\n          volumescale: Number(`1e${symbolData.qty_preci}`),\n          has_intraday: true,\n          intraday_multipliers: ['1', '5', '15', '30', '60', '240'],\n          has_daily: true,\n          has_weekly_and_monthly: true,\n        }\n        onSymbolResolvedCallback(symbolInfo);\n      }).catch(err => onResolveErrorCallback(err));\n  }\n\n  getBars(symbolInfo, resolution, rangeStartDate, rangeEndDate, onHistoryCallback, onErrorCallback, firstDataRequest) {\n    logMessage(`获取Bars: ${resolution}, 从${parseDate(new Date(rangeStartDate * 1000))}到${parseDate(new Date(rangeEndDate * 1000))}`)\n    resolution = getPeriodByInterval(resolution);\n    const params = {\n      exchange: symbolInfo.exchange,\n      symbol: symbolInfo.ticker.split('.')[1],\n      type: resolution,\n      startTime: rangeStartDate,\n      endTime: rangeEndDate,\n    }\n    this._send('getKline', JSON.stringify(params)).then(resp => {\n      let klines = JSON.parse(resp.content)\n      let bars = []\n      klines.forEach((kline, index) => {\n        bars.push({\n          time : kline[0] * 1000,\n          open : Number(kline[1]),\n          close : Number(kline[2]),\n          high : Number(kline[3]),\n          low : Number(kline[4]),\n          volume : Number(kline[5])\n        })\n      })\n      onHistoryCallback(bars, {\n        noData: !bars.length\n      })\n    }, resp => {\n      let reasonString = getErrorMessage(resp)\n      logMessage('获取Bars失败, error=' + reasonString)\n    })\n  }\n\n  subscribeBars (symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n    if (this._subscribers.hasOwnProperty(subscriberUID)) {\n      logMessage(`${subscriberUID}已经被订阅了,无需再次订阅`)\n      return;\n    }\n    resolution = getPeriodByInterval(resolution);\n    let topic =  `${symbolInfo.ticker}.${resolution}`;\n    this._subscribers[subscriberUID] = {\n      lastBarTime: null,\n      api : 'quote.kline',\n      topic : topic,\n    }\n    this._resetCacheNeededCallbacks[subscriberUID] = onResetCacheNeededCallback;\n    this._requester.subscribe('quote.kline', topic, _.bind(function(resp) {\n      //如果subscription在等待数据的时候被取消了\n      if (!this._subscribers.hasOwnProperty(subscriberUID)) {\n        logMessage('等待数据的时候已经被取消了 #' + subscriberUID)\n        return\n      }\n\n      let bars = resp.data\n      if (!bars || bars.leng === 0) return\n      let lastBar = bars[bars.length - 1]\n      let subscriptionRecord = this._subscribers[subscriberUID]\n      if (subscriptionRecord.lastBarTime !== null && lastBar.id < subscriptionRecord.lastBarTime) {\n        return\n      }\n      resp.data.forEach((kline, index) => {\n        let bar = {\n          time : kline.id * 1000,\n          open : Number(kline.open),\n          close : Number(kline.close),\n          high : Number(kline.high),\n          low : Number(kline.low),\n          volume : Number(kline.vol)\n        }\n        onRealtimeCallback(bar);\n      })\n      subscriptionRecord.lastBarTime = lastBar.id\n    }, this))\n  }\n\n  unsubscribeBars (subscriberUID) {\n    const obj = this._subscribers[subscriberUID]\n    this._subscribers[subscriberUID] = null\n    delete this._subscribers[subscriberUID]\n    this._requester.unsubscribe(obj.api, obj.topic)\n    delete this._resetCacheNeededCallbacks[subscriberUID]\n  }\n\n  calculateHistoryDepth (resolution, resolutionBack, intervalBack) {\n    return undefined\n  }\n\n  getMarks() {\n    // 您的 datafeed 是否支持时间刻度标记。\n  }\n  getTimescaleMarks (symbolInfo, startDate, endDate, onDataCallback, resolution) {\n    // 暂不实现\n    if (!this._configuration.supports_timescale_marks) {\n      return\n    }\n  }\n\n  getServerTime (callback) {\n    // supports_time 设置为true，需要知道系统时间\n    if (!this._configuration.supports_time) {\n      return\n    }\n    logMessage('获取系统时间')\n    this._send('getServerTime').then(function(data){\n      callback(data.content)\n    })\n  }\n\n  close() {\n    this._requester.close()\n  }\n\n  resetCache() {\n    for (let listenerGuid in this._resetCacheNeededCallbacks) {\n      if (this._resetCacheNeededCallbacks.hasOwnProperty(listenerGuid)) {\n        this._resetCacheNeededCallbacks[listenerGuid]();\n      }\n    }\n  }\n}\n","import { WSCompatibleDatafeedBase } from './ws-compatible-datafeed-base';\n\nclass WSCompatibleDatafeed extends WSCompatibleDatafeedBase {\n\n  constructor(datafeedURL) {\n    super(datafeedURL);\n  }\n}\nexport { WSCompatibleDatafeed };\n"],"names":["logMessage","message","getErrorMessage","error","undefined","WS","url","opts","connectState","listeners","connectionUrl","reconnection","reconnectionAttempts","reconnectionDelay","reconnectTimeoutId","reconnectionCount","connect","webSocket","WebSocket","binaryType","sendObj","obj","send","JSON","stringify","initEvent","clearTimeout","setTimeout","forEach","eventType","index","event","reconnect","handler","includes","Error","push","data","close","Requester","ws","on","_","each","_callbacks","callback","req","dataJson","parse","id","api","func","topic","_requests","onSubscriberDataReceived","uniqueId","type","params","Promise","resolve","reject","resp","error_code","parseDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","defaultConfiguration","supports_search","supports_group_request","exchanges","symbols_types","supported_resolutions","supports_marks","supports_timescale_marks","supports_time","getPeriodByInterval","interval","matched","toString","match","num","resolution","e","WSCompatibleDatafeedBase","datafeedUrl","_subscribers","_resetCacheNeededCallbacks","_datafeedUrl","_configuration","_requester","urlPath","sendRequest","userInput","exchange","symbolType","onResultReadyCallback","symbolStr","onSymbolResolvedCallback","onResolveErrorCallback","exch_abb","split","symbol_name","_send","replace","toLowerCase","then","content","symbolData","symbolInfo","name","toUpperCase","ticker","session","timezone","minmov","pricescale","Number","price_preci","volumescale","qty_preci","has_intraday","intraday_multipliers","has_daily","has_weekly_and_monthly","catch","err","rangeStartDate","rangeEndDate","onHistoryCallback","onErrorCallback","firstDataRequest","Date","symbol","startTime","endTime","klines","bars","kline","time","open","high","low","volume","noData","length","reasonString","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","hasOwnProperty","lastBarTime","subscribe","bind","leng","lastBar","subscriptionRecord","bar","vol","unsubscribe","resolutionBack","intervalBack","startDate","endDate","onDataCallback","listenerGuid","WSCompatibleDatafeed","datafeedURL"],"mappings":"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"}