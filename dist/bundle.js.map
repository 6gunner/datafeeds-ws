{"version":3,"file":"bundle.js","sources":["../src/helpers.js","../src/ws.js","../src/requester.js","../src/ws-compatible-datafeed-base.js","../src/index.js"],"sourcesContent":["/**\n * If you want to enable logs from datafeed set it to `true`\n */\nvar isLoggingEnabled = true;\nexport function logMessage(message) {\n    if (isLoggingEnabled) {\n        var now = new Date();\n        console.log(now.toLocaleTimeString() +  \" > \" + message);\n    }\n}\nexport function getErrorMessage(error) {\n    if (error === undefined) {\n        return '';\n    }\n    else if (typeof error === 'string') {\n        return error;\n    }\n    return error.message;\n}\n","import { getErrorMessage, logMessage } from './helpers';\nexport class WS {\n  constructor (url, opts = {}) {\n    this.connectState = false\n    this.listeners = {}\n    this.connectionUrl = url\n    this.opts = opts\n    this.reconnection = this.opts.reconnection || false\n    this.reconnectionAttempts = this.opts.reconnectionAttempts || 5\n    this.reconnectionDelay = this.opts.reconnectionDelay || 1000\n    this.reconnectTimeoutId = 0\n    this.reconnectionCount = 0\n    this.connect(url, opts)\n  }\n  connect (connectionUrl, opts = {}) {\n    this.webSocket = new WebSocket(connectionUrl)\n    this.webSocket.binaryType = 'arraybuffer'\n    if (!('sendObj' in this.webSocket)) {\n      this.webSocket.sendObj = (obj) => this.webSocket.send(JSON.stringify(obj))\n    }\n    this.initEvent()\n    return this.webSocket\n  }\n\n  reconnect() {\n    if (this.reconnectionCount <= this.reconnectionAttempts) {\n      this.reconnectionCount++\n      clearTimeout(this.reconnectTimeoutId)\n      this.reconnectTimeoutId = setTimeout(() => {\n        this.connect(this.connectionUrl, this.opts)\n        this.initEvent()\n      }, this.reconnectionDelay)\n    }\n  }\n\n  initEvent() {\n    ['onmessage', 'onopen', 'onclose', 'onerror'].forEach((eventType, index) => {\n      this.listeners[eventType] = this.listeners[eventType] || []\n      this.webSocket[eventType] = (event) => {\n        if (eventType === 'onopen') {\n          this.connectState = true\n        }\n        if (this.reconnection && eventType === 'onopen') {\n          this.reconnectionCount = 0\n        }\n        if (this.reconnection && eventType === 'onclose') {\n          this.reconnect(event)\n        }\n        this.listeners[eventType].forEach((handler) => {\n          handler(event)\n        })\n      }\n    })\n  }\n\n  on (eventType, handler) {\n    if (!['message', 'open', 'close', 'error'].includes(eventType)) {\n      throw new Error('event type error')\n    }\n    let listeners = this.listeners['on'+eventType] || []\n    listeners.push(handler)\n\n    this.listeners['on'+eventType] = listeners\n  }\n\n  send (data) {\n    console.log(data);\n    if (data.type === 0) {\n      logMessage(`ws订阅消息：api: ${data.api}, topic: ${data.topic}`)\n    } else if (data.type === 1) {\n      logMessage(`ws取消订阅消息：api: ${data.api}, topic: ${data.topic}`)\n    } else {\n      logMessage(`ws发送消息： ${JSON.stringify(data)}`)\n    }\n    this.webSocket.sendObj(data);\n  }\n\n  close() {\n    this.reconnectionCount = 0\n    this.reconnectionAttempts = -1\n    this.webSocket.close()\n  }\n\n}\n","import _ from 'underscore'\nimport { getErrorMessage, logMessage } from './helpers';\nimport {WS} from './ws'\nexport class Requester {\n  constructor (url) {\n    let ws = new WS(url, {\n      reconnection: true\n    })\n    ws.on('open', event => {\n      logMessage(`k线行情连接成功`)\n      _.each(this._callbacks, (callback, callbackKey) => {\n          this.ws.send(callback.req)\n      })\n    })\n    ws.on('message', event => {\n      let data = event.data\n      if (!data) {\n        return\n      }\n      data = JSON.parse(data)\n      if(data.id > 0 && this._callbacks[data.id]){\n        let callback = this._callbacks[data.id].callback;\n        callback(event, data)\n      } else {\n        let func = this._callbacks[data.api+'#'+data.topic];\n        if(func){\n          func.callback(data)\n        }\n      }\n    })\n    ws.on('close', event => {\n      logMessage(`k线行情断开成功`)\n    })\n    this.ws = ws\n    this._url = url\n    this._callbacks = {}\n    this._requests = []\n  }\n  subscribe (api, topic, onSubscriberDataReceived) {\n    logMessage(`订阅新的主题：api: ${api}, topic: ${topic}`)\n    let req = {\n      id: _.uniqueId(),\n      api: api,\n      topic: topic,\n      type: 0\n    }\n    this.ws.send(req)\n    this._callbacks[api+'#'+topic] = {req, callback: onSubscriberDataReceived}\n  }\n\n  unsubscribe (api, topic) {\n    logMessage(`取消订阅主题：api: ${api}, topic: ${topic}`)\n    let req = {\n      id: _.uniqueId(),\n      api: api,\n      topic: topic,\n      type: 1\n    }\n    this.ws.send(req)\n    this._callbacks[api+'#'+topic] = null;\n    delete this._callbacks[api+'#'+topic]\n  }\n\n  sendRequest (api, params = '') {\n    logMessage(`发送请求: ${api}, 参数: ${params}`)\n    let id = _.uniqueId()\n    let req = {\n      id: id,\n      api: api,\n      topic: params,\n      type: 2\n    }\n    return new Promise((resolve, reject) => {\n      if (this.ws.connectState) {\n        this.ws.send(req)\n      }\n      let callback = function (event, resp) {\n        if (resp.error_code !== '0') {\n          reject(resp)\n          return\n        }\n        resolve(resp)\n      }\n      // 缓存所有请求连接上再发送\n      this._callbacks[id] = {\n        req: req,\n        callback: callback\n      }\n    })\n  }\n  close() {\n    this.ws.close()\n  }\n}\n","import _ from 'underscore';\nimport { getErrorMessage, logMessage } from './helpers';\nimport { Requester } from './requester';\n\nfunction parseDate(date) {\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n}\nfunction defaultConfiguration() {\n  return {\n    supports_search: false,\n    supports_group_request: false,\n    exchanges: [],\n    symbols_types: [], //用来不过滤币对\n    supported_resolutions : ['1', '5', '15', '30', '60', 'D'],\n    supports_marks : false,\n    supports_timescale_marks : false, //是否支持时间缩放\n    supports_time : true\n  }\n}\nfunction getPeriodByInterval(interval) {\n  try {\n    let matched = interval.toString().match(/^(\\d+)?([SDWM]?)?$/)\n    let input = matched[0]\n    let num = matched[1] || 1\n    let resolution = matched[2]\n    switch (resolution) {\n      case 'S':\n        return num + 's';\n      case 'D':\n        return num + 'day';\n      case 'W':\n        return 1 + 'day';\n      case 'M':\n        return 1 + 'day';\n      default:\n        return num % 60 == 0 && num > 60 ? num / 60 + 'hour': num + 'min'\n    }\n  } catch(e) {\n    throw interval\n  }\n}\nfunction getIntervalByPeriod(period) {\n  try {\n    let matched = period.match(/^(\\d+)(s|min|hour|day|mon|week|year)$/)\n    let input = matched[0]\n    let r = matched[1] || 1\n    let type = matched[2]\n    switch (type) {\n      case 's':\n        return r + 'S';\n      case 'hour':\n        return \"\" + 60 * r;\n      case 'day':\n        return r + 'D';\n      case 'week':\n        return 7 * parseInt(r, 10) + 'D';\n      case 'mon':\n        return r + 'M';\n      case 'year':\n        return 12 * parseInt(r, 10) + 'M';\n      default:\n        return r\n    }\n  } catch(e) {\n    throw t\n  }\n}\n\nexport class WSCompatibleDatafeedBase{\n  constructor (datafeedUrl) {\n    this._subscribers = {}\n    this._datafeedUrl = datafeedUrl\n    this._configuration = defaultConfiguration()\n    this._requester = new Requester(datafeedUrl)\n  }\n\n  _send (urlPath, params) {\n    return this._requester.sendRequest(urlPath, params)\n  }\n\n  onReady (callback) {\n    setTimeout(() => {\n      callback(this._configuration)\n    }, 0)\n  }\n\n  searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n    // 暂不实现\n  }\n\n  /**\n   * @param symbolJsonStr symbol的json字符串\n   * @param onSymbolResolvedCallback\n   * @param onResolveErrorCallback\n   */\n  resolveSymbol(symbolStr, onSymbolResolvedCallback, onResolveErrorCallback) {\n    logMessage(`获取币对信息${symbolStr}`);\n    let exch_abb = symbolStr.split(':')[0];\n    let symbol_name = symbolStr.split(':')[1];\n    this._send('getSymbol', exch_abb + '.' + symbol_name.replace('/', '').toLowerCase())\n      .then(data => {\n        logMessage(`解析到币对信息${data.content}`);\n        const symbolData = JSON.parse(data.content);\n        if (!symbolData) {\n          throw new Error('no such symbol');\n        }\n        let symbolInfo = {\n          name: symbol_name.toUpperCase(),\n          ticker: symbolData.symbol,\n          type: 'bitcoin',\n          session: '24x7',\n          timezone: 'Asia/Shanghai',\n          exchange: exch_abb,\n          minmov: 1,\n          pricescale: Number(`1e${symbolData.price_preci}`),\n          volumescale: Number(`1e${symbolData.qty_preci}`),\n          has_intraday: true,\n          intraday_multipliers: ['1', '5', '15', '30', '60', '240'],\n          has_daily: true,\n          has_weekly_and_monthly: true,\n        }\n        onSymbolResolvedCallback(symbolInfo);\n      }).catch(err => onResolveErrorCallback(err));\n  }\n\n  getBars(symbolInfo, resolution, rangeStartDate, rangeEndDate, onHistoryCallback, onErrorCallback, firstDataRequest) {\n    logMessage(`获取Bars: ${resolution}, 从${parseDate(new Date(rangeStartDate*1000))}到${parseDate(new Date(rangeEndDate*1000))}`)\n    resolution = getPeriodByInterval(resolution)\n    let params = {\n      exchange : symbolInfo.exchange,\n      symbol : symbolInfo.ticker,\n      type : resolution,\n      startTime : rangeStartDate,\n      endTime : rangeEndDate\n    }\n    this._send('getKline', JSON.stringify(params)).then(resp => {\n      let klines = JSON.parse(resp.content)\n      let bars = []\n      klines.forEach((kline, index) => {\n        bars.push({\n          time : kline[0] * 1000,\n          open : Number(kline[1]),\n          close : Number(kline[2]),\n          high : Number(kline[3]),\n          low : Number(kline[4]),\n          volume : Number(kline[5])\n        })\n      })\n      onHistoryCallback(bars, {\n        noData: !bars.length\n      })\n    }, resp => {\n      let reasonString = getErrorMessage(resp)\n      logMessage(\"获取Bars失败, error=\" + reasonString)\n    })\n  }\n\n  subscribeBars (symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n    if (this._subscribers.hasOwnProperty(subscriberUID)) {\n      logMessage(`${subscriberUID}已经被订阅了,无需再次订阅`)\n      return\n    }\n    resolution = getPeriodByInterval(resolution)\n    let topic =  `${symbolInfo.exchange}.${symbolInfo.ticker}.${resolution}`;\n    this._subscribers[subscriberUID] = {\n      lastBarTime: null,\n      api : \"quote.kline\",\n      topic : topic\n    }\n    this._requester.subscribe(\"quote.kline\", topic, _.bind(function(resp){\n      //如果subscription在等待数据的时候被取消了\n      if (!this._subscribers.hasOwnProperty(subscriberUID)) {\n        logMessage(\"等待数据的时候已经被取消了 #\" + subscriberUID)\n        return\n      }\n      let bars = resp.data\n      if (!bars || bars.leng === 0) return\n      let lastBar = bars[bars.length - 1]\n      let subscriptionRecord = this._subscribers[subscriberUID]\n      if (subscriptionRecord.lastBarTime !== null && lastBar.id < subscriptionRecord.lastBarTime) {\n        return\n      }\n      resp.data.forEach((kline, index) => {\n        let bar = {\n          time : kline.id * 1000,\n          open : Number(kline.open),\n          close : Number(kline.close),\n          high : Number(kline.high),\n          low : Number(kline.low),\n          volume : Number(kline.vol)\n        }\n        onRealtimeCallback(bar)\n      })\n      subscriptionRecord.lastBarTime = lastBar.id\n    }, this))\n  }\n\n  unsubscribeBars (subscriberUID) {\n    logMessage(`取消订阅#${subscriberUID}`)\n    let obj = this._subscribers[subscriberUID]\n    this._subscribers[subscriberUID] = null\n    delete this._subscribers[subscriberUID]\n    this._requester.unsubscribe(obj.api, obj.topic)\n  }\n\n  calculateHistoryDepth (resolution, resolutionBack, intervalBack) {\n    return undefined\n  }\n\n  getMarks() {\n    // 您的 datafeed 是否支持时间刻度标记。\n  }\n  getTimescaleMarks (symbolInfo, startDate, endDate, onDataCallback, resolution) {\n    // 暂不实现\n    if (!this._configuration.supports_timescale_marks) {\n      return\n    }\n  }\n\n  getServerTime (callback) {\n    // supports_time 设置为true，需要知道系统时间\n    if (!this._configuration.supports_time) {\n      return\n    }\n    logMessage('获取系统时间')\n    this._send('getServerTime').then(function(data){\n      callback(data.content)\n    })\n  }\n\n  close() {\n    this._requester.close()\n  }\n}\n","import { WSCompatibleDatafeedBase } from './ws-compatible-datafeed-base';\nclass WSCompatibleDatafeed extends WSCompatibleDatafeedBase {\n  constructor(datafeedURL) {\n    super(datafeedURL);\n  }\n}\nexport { WSCompatibleDatafeed };"],"names":["logMessage","message","getErrorMessage","error","undefined","WS","url","opts","connectState","listeners","connectionUrl","reconnection","reconnectionAttempts","reconnectionDelay","reconnectTimeoutId","reconnectionCount","connect","webSocket","WebSocket","binaryType","sendObj","obj","send","JSON","stringify","initEvent","clearTimeout","setTimeout","forEach","eventType","index","event","reconnect","handler","includes","Error","push","data","type","api","topic","close","Requester","ws","on","_","each","_callbacks","callback","callbackKey","req","parse","id","func","_url","_requests","onSubscriberDataReceived","uniqueId","params","Promise","resolve","reject","resp","error_code","parseDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","defaultConfiguration","supports_search","supports_group_request","exchanges","symbols_types","supported_resolutions","supports_marks","supports_timescale_marks","supports_time","getPeriodByInterval","interval","matched","toString","match","input","num","resolution","e","WSCompatibleDatafeedBase","datafeedUrl","_subscribers","_datafeedUrl","_configuration","_requester","urlPath","sendRequest","userInput","exchange","symbolType","onResultReadyCallback","symbolStr","onSymbolResolvedCallback","onResolveErrorCallback","exch_abb","split","symbol_name","_send","replace","toLowerCase","then","content","symbolData","symbolInfo","name","toUpperCase","ticker","symbol","session","timezone","minmov","pricescale","Number","price_preci","volumescale","qty_preci","has_intraday","intraday_multipliers","has_daily","has_weekly_and_monthly","catch","err","rangeStartDate","rangeEndDate","onHistoryCallback","onErrorCallback","firstDataRequest","Date","startTime","endTime","klines","bars","kline","time","open","high","low","volume","noData","length","reasonString","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","hasOwnProperty","lastBarTime","subscribe","bind","leng","lastBar","subscriptionRecord","bar","vol","unsubscribe","resolutionBack","intervalBack","startDate","endDate","onDataCallback","WSCompatibleDatafeed","datafeedURL"],"mappings":"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"}